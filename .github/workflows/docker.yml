name: Deploy to DockerHub and GHCR

on:
  push:
    branches: [master]

env:
  GH_PACKAGE: ghcr.io/${{ github.repository }}:latest
  DOCKER_PACKAGE: khari05/ctf-ub:latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push amd64 image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.GH_PACKAGE }}-amd64
            ${{ env.DOCKER_PACKAGE }}-amd64
      - name: Build and push arm64 image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.GH_PACKAGE }}-arm64
            ${{ env.DOCKER_PACKAGE }}-arm64
      - name: Make a combined manifest for DockerHub
        run: docker manifest create \
          ${{ env.DOCKER_PACKAGE }} \
          --amend ${{ env.DOCKER_PACKAGE }}-amd64 \
          --amend ${{ env.DOCKER_PACKAGE }}-arm64
      - name: Make a combined manifest for GHCR
        run: docker manifest create \
          ${{ env.DOCKER_PACKAGE }} \
          --amend ${{ env.GH_PACKAGE }}-amd64 \
          --amend ${{ env.GH_PACKAGE }}-arm64
      - name: Push manifest to DockerHub
        run: docker manifest push ${{ env.DOCKER_PACKAGE }}
      - name: Push manifest to GHCR
        run: docker manifest push  ${{ env.GH_PACKAGE }}
